/*  
 * The magic happens in grid.less
 */
html,
body,
ul,
ol,
li,
form,
fieldset,
legend {
  margin: 0;
  padding: 0;
}
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin-top: 0;
}
fieldset,
img {
  border: 0;
}
legend {
  color: #000;
}
li {
  list-style: none;
}
sup {
  vertical-align: text-top;
}
sub {
  vertical-align: text-bottom;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
caption,
th,
td {
  text-align: left;
  vertical-align: top;
  font-weight: normal;
}
input,
textarea,
select {
  font-size: 110%;
  line-height: 1.1;
}
abbr,
acronym {
  border-bottom: .1em dotted;
  cursor: help;
}
/* 
 * Gridonkulous: a tiny fluid grid system for Less 
 * http://github.com/daltonrooney/gridonkulous
 * MIT License: http://opensource.org/licenses/MIT
 */
/* Change these variables */
/* Any number of columns */
/* in % */
/* When do the columns kick in? By default, columns are 100% width. */
/* You probably don't want to edit below this line */
.row,
.col {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.row {
  padding: 0 20px;
}
.row:before,
.row:after {
  content: "";
  display: table;
}
.row:after {
  clear: both;
}
.row .row {
  margin: 0 -2%;
}
.col {
  float: left;
  width: 100%;
}
@media only screen and (min-width: 600px) {
  .col {
    margin: 0 1%;
  }
  .col:first-child {
    margin-left: 0;
  }
  .col:last-child {
    margin-right: 0;
  }
}
/* Simple body styles for demo */
body {
  font-family: 'Source Sans Pro', sans-serif;
  color: #555;
  width: 100%;
  max-width: 1000px;
  margin: 0px auto;
  font-size: 15px;
  line-height: 1.5em;
}
a {
  text-decoration: none;
  color: #6E9DBF;
  transition: color linear .1s;
}
a:hover {
  color: #5c91b7;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;
  margin-bottom: 0;
}
h1 {
  line-height: 1.3;
}
header {
  padding: 20px;
}
.example {
  margin-bottom: 20px;
}
.example .col {
  background-color: #dedede;
  padding-top: 20px;
  padding-bottom: 20px;
  text-align: center;
}
.example .col:first-child {
  background-color: #cccccc;
}
.content {
  margin-bottom: 20px;
  text-align: left;
}
/*
 * Here comes the grid! You can use semantic class names or numerical, whatever works for you.
 * All column declarations go inside a media query for mobile-first responsiveness. The default column width is 100%. 
 */
@media only screen and (min-width: 600px) {
  .primary {
    width: 65.66666666666666%;
  }
  .secondary {
    width: 32.33333333333333%;
  }
  .one {
    width: 7.333333333333332%;
  }
  .two {
    width: 15.666666666666664%;
  }
  .three {
    width: 24%;
  }
  .four {
    width: 32.33333333333333%;
  }
  .five {
    width: 40.66666666666667%;
  }
  .six {
    width: 49%;
  }
  .seven {
    width: 57.333333333333336%;
  }
  .eight {
    width: 65.66666666666666%;
  }
  .nine {
    width: 74%;
  }
  .ten {
    width: 82.33333333333334%;
  }
  .eleven {
    width: 90.66666666666666%;
  }
  .twelve {
    width: 99%;
  }
  .push-1 {
    margin-left: 8.333333333333332%;
  }
  .push-4 {
    margin-left: 33.33333333333333%;
  }
}
